layout: {zmk_keyboard: sofle}
layers:
  default:
  - '`'
  - '1'
  - '2'
  - '3'
  - '4'
  - '5'
  - ''
  - '6'
  - '7'
  - '8'
  - '9'
  - '0'
  - ESC
  - Q
  - W
  - E
  - R
  - T
  - ''
  - Y
  - U
  - I
  - O
  - P
  - TAB
  - A
  - S
  - D
  - F
  - G
  - ''
  - H
  - J
  - K
  - L
  - RET
  - LSHFT
  - {t: num, h: toggle}
  - Z
  - X
  - C
  - V
  - OUT BLE
  - {t: last, h: toggle}
  - ''
  - B
  - N
  - M
  - ','
  - {t: ., h: RSHIFT}
  - LGUI
  - LALT
  - LCTRL
  - {t: RET, h: lower}
  - SPACE
  - SPACE
  - {t: RET, h: raise}
  - RCTRL
  - RALT
  - RGUI
  lower:
  - DEL
  - F1
  - F2
  - F3
  - F4
  - F5
  - ''
  - F6
  - F7
  - F8
  - F9
  - F10
  - BSPC
  - Meh+Q
  - '7'
  - '8'
  - '9'
  - Ctl+Sft+T
  - ''
  - '1'
  - '2'
  - '3'
  - '4'
  - F11
  - {t: ▽, type: trans}
  - '6'
  - Sft+Gui+S
  - '#'
  - '0'
  - .
  - ''
  - '&'
  - KP MULTIPLY
  - {t: ▽, type: trans}
  - '5'
  - F12
  - {t: ▽, type: trans}
  - '='
  - '-'
  - KP PLUS
  - {t: ▽, type: trans}
  - OUT USB
  - '&soft_off'
  - {t: ▽, type: trans}
  - ''
  - ''
  - ;
  - ':'
  - '?'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {type: held}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  raise:
  - {t: ▽, type: trans}
  - {t: BT, h: '0'}
  - {t: BT, h: '1'}
  - {t: BT, h: '2'}
  - {t: BT, h: '3'}
  - {t: BT, h: '4'}
  - ''
  - {t: BT, h: '0'}
  - {t: BT, h: '1'}
  - {t: BT, h: '2'}
  - {t: BT, h: '3'}
  - {t: BT, h: '4'}
  - {t: ▽, type: trans}
  - INS
  - PSCRN
  - CMENU
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - ''
  - PG UP
  - HOME
  - UP
  - END
  - '&studio_unlock'
  - {t: ▽, type: trans}
  - LALT
  - LCTRL
  - LSHFT
  - {t: ▽, type: trans}
  - CLCK
  - ''
  - PG DN
  - LEFT
  - DOWN
  - RIGHT
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - UNDO
  - CUT
  - COPY
  - PASTE
  - {t: ▽, type: trans}
  - OUT USB
  - {t: ▽, type: trans}
  - ''
  - BT CLR
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {type: held}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  num:
  - {t: ▽, type: trans}
  - BSPC
  - KP MULTIPLY
  - /
  - {t: num, h: toggle}
  - DEL
  - {t: ▽, type: trans}
  - {t: num, h: toggle}
  - /
  - KP MULTIPLY
  - '='
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - '-'
  - '9'
  - '8'
  - '7'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - '7'
  - '8'
  - '9'
  - '-'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - KP PLUS
  - '6'
  - '5'
  - '4'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - '4'
  - '5'
  - '6'
  - KP PLUS
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - '3'
  - '2'
  - '1'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - '1'
  - '2'
  - '3'
  - RET
  - {t: ▽, type: trans}
  - RET
  - .
  - '0'
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - {t: ▽, type: trans}
  - '0'
  - .
  - {t: ▽, type: trans}
  last:
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - {t: last, h: toggle}
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
  - ''
combos:
- p: [27, 28]
  k: RIGHT
  l: [default, lower, raise, num]
- p: [26, 27]
  k: LEFT
  l: [default, lower, raise, num]
- p: [15, 27]
  k: UP
  l: [default, lower, raise, num]
- p: [27, 39]
  k: DOWN
  l: [default, lower, raise, num]
- p: [16, 17]
  k: '{'
  l: [default, lower, raise, num]
- p: [19, 20]
  k: '}'
  l: [default, lower, raise, num]
- p: [28, 29]
  k: '['
  l: [default, lower, raise, num]
- p: [31, 32]
  k: ']'
  l: [default, lower, raise, num]
- p: [40, 41]
  k: (
  l: [default, lower, raise, num]
- p: [45, 46]
  k: )
  l: [default, lower, raise, num]
- p: [27, 40]
  k: \
  l: [default, lower, raise, num]
- p: [33, 46]
  k: /
  l: [default, lower, raise, num]
- p: [24, 25]
  k: CAPS
  l: [default, lower, raise, num]
- p: [9, 10]
  k: '-'
  l: [default, lower, raise, num]
- p: [10, 11]
  k: '='
  l: [default, lower, raise, num]
- p: [0, 1]
  k: BSPC
  l: [default, lower, raise, num]
- p: [22, 23]
  k: BSPC
  l: [default, lower, raise, num]
- p: [1, 12]
  k: DEL
  l: [default, lower, raise, num]
- p: [10, 23]
  k: DEL
  l: [default, lower, raise, num]
- p: [2, 13]
  k: ''''
  l: [default, lower, raise, num]
- p: [47, 48]
  k: ;
  l: [default, lower, raise, num]

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/outputs.h>

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

#define DEFAULT     0
#define LOWER       1
#define RAISE       2
#define NUM	    	3
#define NULL 		4

/ {
    combos {
        compatible = "zmk,combos";

	// arrow keys
	combo_right {
	timeout-ms = <50>;
	key-positions = <27 28>; // KP: DF
	bindings = <&kp RIGHT>; // 方便中文输入切换下一个选项，结合右手的JK enter，小键盘输入中文也毫无障碍
		};
	combo_left {
	timeout-ms = <50>;
	key-positions = <26 27>; // KP: SD
	bindings = <&kp LEFT>; // 同上逻辑，方便中文输入。再加上强迫症，所以上下左右都放了，形成一个像游戏手柄的D-Pad
		};
	combo_up{
	timeout-ms = <50>;
	key-positions = <15 27>; // KP: ED
	bindings = <&kp UP>; // 上下键不怎么用，一些需要用上下左右的组合软件功能键，我都放在切层里，用上一篇中方向键的位置。如果使用的话是直接按两个键中间
		};
	combo_down {
	timeout-ms = <50>;
	key-positions = <27 39>; // KP: DX
	bindings = <&kp DOWN>; 
		};
	
	// 括号
	combo_ll{
	timeout-ms = <50>;
	key-positions = <16 17>; // KP: RT
	bindings = <&kp LBRC>; 
		};
	combo_lr{
	timeout-ms = <50>;
	key-positions = <18 19>; // KP: YU
	bindings = <&kp RBRC>; 
		};
	combo_ml{
	timeout-ms = <50>;
	key-positions = <28 29>; // KP: FG
	bindings = <&kp LBKT>; 
		};
	combo_mr{
	timeout-ms = <50>;
	key-positions = <30 31>; // KP: HJ
	bindings = <&kp RBKT>; 
		};
	combo_sl{
	timeout-ms = <50>;
	key-positions = <40 41>; // KP: CV
	bindings = <&kp LPAR>; 
		};
	combo_sr{
	timeout-ms = <50>;
	key-positions = <44 45>; // KP: BN
	bindings = <&kp RPAR>; 
		};
		
	// mixed setups
	combo_bkslash {
	timeout-ms = <50>;
	key-positions = <27 40>; // KP: DC
	bindings = <&kp BSLH>; 
		};
	combo_slash {
	timeout-ms = <50>;
	key-positions = <32 45>; // KP: KN
	bindings = <&kp FSLH>; 
		};
	combo_cplk {
	timeout-ms = <50>;
	key-positions = <24 25>; // KP: TABA
	bindings = <&kp CAPS>; 
		};
	combo_minus {
	timeout-ms = <50>;
	key-positions = <8 9>; // KP: 89
	bindings = <&kp MINUS>; 
		};
	combo_equal {
	timeout-ms = <50>;
	key-positions = <9 10>; // KP: 90
	bindings = <&kp EQUAL>; 
		};
	combo_bspc {
	timeout-ms = <50>;
	key-positions = <0 1>; // KP: `1
	bindings = <&kp BSPC>; 
		};
	combo_dell {
	timeout-ms = <50>;
	key-positions = <1 12>; // KP: 1ESC
	bindings = <&kp DEL>; 
		};
	combo_delr {
	timeout-ms = <50>;
	key-positions = <10 23>; // KP: 0\
	bindings = <&kp DEL>; 
		};
	combo_qmark {
	timeout-ms = <50>;
	key-positions = <48 49>; // KP: ./
	bindings = <&kp QMARK>; 
		};
	};
};


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   | ENTER |
// | SHIFT |     |  Z  |  X   |  C   |  V   |  MUTE  |  | tog4  |  B   |  N    |  M    |  ,   |   .   |   /   |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1    &kp N2   &kp N3   &kp N4    &kp N5                        &kp N6     &kp N7    &kp N8    &kp N9    &kp N0   &kp BSPC
&kp ESC   &kp Q     &kp W    &kp E    &kp R     &kp T			              &kp Y      &kp U     &kp I     &kp O     &kp P    &kp BSLH
&kp TAB   &kp A     &kp S    &kp D    &kp F     &kp G                         &kp H      &kp J     &kp K     &kp L     &kp SEMI &kp RET
&kp LSHFT &tog NUM &kp Z    &kp X    &kp C     &kp V  &kp C_MUTE    &tog NULL &kp B      &kp N     &kp M     &kp COMMA &kp DOT  &kp FSLH
                 &kp LGUI &kp LALT &kp LCTRL &lt 1 RET &kp SPACE    &kp SPACE &lt 2 RET  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp DOWN UP>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |  DEL  |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | BKSPC | CASQ|  7  |   8  |   9  |  CST |                   |   1  |   2   |   3   |   4  |    5  |  F12  |
// |       |  6  |  @  |  #   |   0  |  .   |                   |  ^   |  &    |  *    |  (   |   )   |   '   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   ?   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp DEL   &kp F1               &kp F2           &kp F3      &kp F4    &kp F5                     &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp BSPC  &kp LC(LS(LA(Q)))    &kp N7           &kp N8      &kp N9    &kp LC(LS(T))              &kp N1    &kp N2   &kp N3          &kp N4    &kp N5    &kp F12
&trans    &kp N6               &kp LS(LG(S))    &kp HASH    &kp N0    &kp DOT		             &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp SQT
&trans    &kp EQUAL            &kp MINUS        &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans  &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp QMARK &trans
                               &trans           &trans      &trans    &trans    &trans   &trans  &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp UP DOWN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |     | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | BT1  | BT2  |  BT3  | BT4  |  BT5  |  DEL  |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP | HOME |   ^   | END  |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |       | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |BTCLR |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                   &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &kp DEL
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans			              &kp PG_UP     &kp HOME     &kp UP       &kp END      &kp N0        &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK			              &kp PG_DN     &kp LEFT     &kp DOWN     &kp RIGHT    &trans        &kp BSPC
&trans     &kp Z        &kp X        &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans        &bt BT_CLR    &trans       &trans       &trans       &trans        &trans
                        &trans       &trans       &trans       &trans  &trans   &trans        &trans        &trans       &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };
	num_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |BKSPC|  *  |  /   | tog3 |  DEL |                   |  6   | tog3 |  /  |  *   |     | BKSPC |
// |  ESC  |  -  |  9  |  8   |  7   |      |                   |  Y   |  7   |  8  |  9   |  -  |   \   |
// |  TAB  |  +  |  6  |  5   |  4   |      |                   |  H   |  4   |  5  |  6   |  +  | ENTER |
// | SHIFT |     |  3  |  2   |	 1	 |      |  MUTE  |  | CAPS  |  B   |  1   |  2  |  3   |ENTER|   /   |
//               |ENTER| .	  |  0	 | LOWER|  SPACE |  | SPACE | RAISE|  0   |  .  | GUI  |
            bindings = <
&trans	 &kp BSPC 		&kp KP_MULTIPLY   &kp FSLH &tog NUM  &kp DEL                &kp N6	&tog NUM  &kp FSLH  &kp KP_MULTIPLY &kp N0	  	&trans
&trans   &kp MINUS  	&kp N9   		  &kp N8   &kp N7    &trans                 &kp Y	&kp N7    &kp N8    &kp N9 		  	&kp MINUS	&trans
&trans   &kp KP_PLUS  	&kp N6   		  &kp N5   &kp N4    &trans                 &kp H	&kp N4    &kp N5    &kp N6 		  	&kp KP_PLUS &trans
&trans	 &trans 		&kp N3   		  &kp N2   &kp N1    &trans	&trans  &trans  &kp B	&kp N1    &kp N2    &kp N3 		  	&kp RET	  	&trans
                 		&kp RET  		  &kp DOT  &kp N0 	 &trans	&trans  &trans  &trans	&kp N0	  &kp DOT   &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp DOWN UP>;
        };
	null_layer {
            bindings = <
&none &none &none &none &none &none     					&none &none &none &none &none &none
&none &none &none &none &none &none     					&none &none &none &none &none &none
&none &none &none &none &none &none     					&none &none &none &none &none &none
&none &none &none &none &none &none     &none  &tog NULL	&none &none &none &none &none &none
        	&none &none &none &none     &none  &none   		&none &none &none &none
            >;
            sensor-bindings = <&inc_dec_kp UP _DN &inc_dec_kp DOWN UP>;        };

    };
};



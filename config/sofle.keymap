/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
//#include <dt-bindings/zmk/outputs.h>

&left_encoder { resolution = <2>; };
&right_encoder { resolution = <2>; };

#define BASE        0
#define LOWER       1
#define RAISE       2
#define NEXT        3


#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zephyr,display = &oled;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <16>;
        rows = <4>;
// | SW6  | SW5  | SW4  | SW3  | SW2  | SW1  |                 | SW1  | SW2  | SW3  | SW4  | SW5  | SW6  |
// | SW12 | SW11 | SW10 | SW9  | SW8  | SW7  |                 | SW7  | SW8  | SW9  | SW10 | SW11 | SW12 |
// | SW18 | SW17 | SW16 | SW15 | SW14 | SW13 |                 | SW13 | SW14 | SW15 | SW16 | SW17 | SW18 |
// | SW24 | SW23 | SW22 | SW21 | SW20 | SW19 | SW25 |   | SW25 | SW19 | SW20 | SW21 | SW22 | SW23 | SW24 |
//               | SW30 | SW29 | SW28 | SW27 | SW26 |   | SW26 | SW27 | SW28 | SW29 | SW30 |
        map = <
RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5)                 RC(0,6) RC(0,7) RC(0,8)  RC(0,9) RC(0,10) RC(0,11)
RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5)                 RC(1,6) RC(1,7) RC(1,8)  RC(1,9) RC(1,10) RC(1,11)
RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5)                 RC(2,6) RC(2,7) RC(2,8)  RC(2,9) RC(2,10) RC(2,11)
RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(4,5) RC(4,6) RC(3,6) RC(3,7) RC(3,8)  RC(3,9) RC(3,10) RC(3,11)
                RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,7) RC(4,8) RC(4,9) RC(4,10) RC(4,11)
        >;
    };

    kscan0: kscan {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";

        diode-direction = "col2row";
        row-gpios
            = <&pro_micro 5 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 6 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 7 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 8 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            , <&pro_micro 9 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)>
            ;
    };

    left_encoder: encoder_left {
        compatible = "alps,ec11";
        label = "LEFT_ENCODER";
        a-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    right_encoder: encoder_right {
        compatible = "alps,ec11";
        label = "RIGHT_ENCODER";
        a-gpios = <&pro_micro 20 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&pro_micro 21 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        resolution = <4>;
        status = "disabled";
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&left_encoder &right_encoder>;
    };
};

&pro_micro_i2c {
    status = "okay";

    oled: ssd1306@3c {
        compatible = "solomon,ssd1306fb";
        reg = <0x3c>;
        label = "DISPLAY";
        width = <128>;
        height = <32>;
        segment-offset = <0>;
        page-offset = <0>;
        display-offset = <0>;
        multiplex-ratio = <31>;
        segment-remap;
        com-invdir;
        com-sequential;
        prechargep = <0x22>;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

	// arrow keys
	combo_right {
	timeout-ms = <50>;
	key-positions = <27 28>; // KP: DF
	bindings = <&kp RIGHT>; // 方便中文输入切换下一个选项，结合右手的JK enter，小键盘输入中文也毫无障碍
		};
	combo_left {
	timeout-ms = <50>;
	key-positions = <26 27>; // KP: SD
	bindings = <&kp LEFT>; // 同上逻辑，方便中文输入。再加上强迫症，所以上下左右都放了，形成一个像游戏手柄的D-Pad
		};
	combo_up{
	timeout-ms = <50>;
	key-positions = <15 27>; // KP: ED 
	bindings = <&kp UP>; // 上下键不怎么用，一些需要用上下左右的组合软件功能键，我都放在切层里，用上一篇中方向键的位置。如果使用的话是直接按两个键中间
		};
	combo_down {
	timeout-ms = <50>;
	key-positions = <27 39>; // KP: DX
	bindings = <&kp DOWN>; 
		};
	};
};


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
// |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   | ENTER |
// | SHIFT |     |  Z  |  X   |  C   |  V   |  MUTE  |  | CAPS  |  B   |  N    |  M    |  ,   |   .   |   /   |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1    &kp N2   &kp N3   &kp N4    &kp N5                        &kp N6     &kp N7    &kp N8    &kp N9    &kp N0   &kp BSPC
&kp ESC   &kp Q     &kp W    &kp E    &kp R     &kp T			              &kp Y      &kp U     &kp I     &kp O     &kp P    &kp BSLH
&kp TAB   &kp A     &kp S    &kp D    &kp F     &kp G                         &kp H      &kp J     &kp K     &kp L     &kp SEMI &kp RET
&kp LSHFT &lt 3 SQT &kp Z    &kp X    &kp C     &kp V  &kp C_MUTE   &kp CAPS  &kp B      &kp N     &kp M     &kp COMMA &kp DOT  &kp FSLH
                 &kp LGUI &kp LALT &kp LCTRL &lt 1 RET &kp SPACE    &kp SPACE &lt 2 RET  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp DOWN UP>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |  DEL  |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
// | BKSPC | CASQ|  7  |   8  |   9  |  CST |                   |   1  |   2   |   3   |   4  |    5  |  F12  |
// |       |  6  |  @  |  #   |   0  |  .   |                   |  ^   |  &    |  *    |  (   |   )   |   '   |
// |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   ?   |       |
//               |     |      |      |      |        |  |       |      |       |       |      |
            bindings = <
&kp DEL   &kp F1               &kp F2           &kp F3      &kp F4    &kp F5                     &kp F6    &kp F7   &kp F8          &kp F9    &kp F10   &kp F11
&kp BSPC  &kp LC(LS(LA(Q)))    &kp N7           &kp N8      &kp N9    &kp LC(LS(T))              &kp N1    &kp N2   &kp N3          &kp N4    &kp N5    &kp F12
&trans    &kp N6               &kp LS(LG(S))    &kp HASH    &kp N0    &kp DOT		             &kp CARET &kp AMPS &kp KP_MULTIPLY &kp LPAR  &kp RPAR  &kp SQT
&trans    &kp EQUAL            &kp MINUS        &kp KP_PLUS &kp LBRC  &kp RBRC  &trans   &trans  &kp LBKT  &kp RBKT &kp SEMI        &kp COLON &kp QMARK  &trans
                               &trans           &trans      &trans    &trans    &trans   &trans  &trans    &trans   &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_DN PG_UP &inc_dec_kp UP DOWN>;
        };

        raise_layer {
// ------------------------------------------------------------------------------------------------------------
// |     | BT1  | BT2  |  BT3  |  BT4  |  BT5 |                | BT1  | BT2  |  BT3  | BT4  |  BT5  |  DEL  |
// |     | INS  | PSCR | GUI   |       |      |                | PGUP | HOME |   ^   | END  |       |       |
// |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |       | BKSPC |
// |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |BTCLR |      |       |      |       |       |
//              |      |       |       |      |      |  |      |      |      |       |      |
            bindings = <
&trans     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                   &bt BT_SEL 0  &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  &kp DEL
&trans     &kp INS      &kp PSCRN    &kp K_CMENU  &trans       &trans			              &kp PG_UP     &kp HOME     &kp UP       &kp END      &kp N0        &trans
&trans     &kp LALT     &kp LCTRL    &kp LSHFT    &trans       &kp CLCK			              &kp PG_DN     &kp LEFT     &kp DOWN     &kp RIGHT    &trans        &kp BSPC
&trans     &kp Z        &kp X        &kp K_COPY   &kp K_PASTE  &trans  &trans   &trans        &bt BT_CLR    &trans       &trans       &trans       &trans        &trans
                        &trans       &trans       &trans       &trans  &trans   &trans        &trans        &trans       &trans       &trans
            >;

            sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
        };
        next_layer {
// ------------------------------------------------------------------------------------------------------------
// |  `    |  1  |  7  |  8   |  9   |  /   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
// |  ESC  |  Q  |  4  |  5   |  6   |  *   |                   |  Y   |  U    |  I    |  O   |   P   |   \   |
// |  TAB  |  A  |  1  |  2   |  3   |  -   |                   |  H   |  J    |  K    |  L   |   ;   | ENTER |
// | SHIFT |     |  0  |  .   |ENTER |  +   |  MUTE  |  | CAPS  |  B   |  N    |  M    |  ,   |   .   |   /   |
//               | GUI | ALT  | CTRL | LOWER|  SPACE |  | SPACE | RAISE| CTRL  | ALT   | GUI  |
            bindings = <
&kp GRAVE &kp N1 &kp N7   &kp N8   &kp N9    &kp FSLH                               &kp N6     &kp N7    &kp N8    &kp N9    &kp N0   &kp BSPC
&kp ESC   &kp Q  &kp N4   &kp N5   &kp N6    &kp KP_MULTIPLY                        &kp Y      &kp U     &kp I     &kp O     &kp P    &kp BSLH
&kp TAB   &kp A  &kp N1   &kp N2   &kp N3    &kp MINUS                              &kp H      &kp J     &kp K     &kp L     &kp SEMI &kp RET
&kp LSHFT &lt 3  &kp N0   &kp DOT  &kp RET   &kp KP_PLUS     &kp C_MUTE  &kp CAPS   &kp B      &kp N     &kp M     &kp COMMA &kp DOT &kp FSLH
                 &kp LGUI &kp LALT &kp LCTRL &lt 1 RET       &kp SPACE   &kp SPACE &lt 2 RET  &kp RCTRL &kp RALT  &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp DOWN UP>;
        };
    };
};


